name: Docker Build Main Push AWS Dev

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md**'
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push-dev-aws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
      - name: Get tag
        run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # v2
        with:
          aws-access-key-id: ${{ secrets.GHA_ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GHA_ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.GHA_ECR_ROLE_ASSUMPTION }}
          role-skip-session-tagging: true
          role-duration-seconds: '3600'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@2f9f10ea3fa2eed41ac443fee8bfbd059af2d0a4 # v1

      - name: Login to ECR
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}
          tags: |
            type=sha,prefix=,format=long
          flavor: |
            latest=false
      - uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2
        id: buildx
        with:
          install: true

      - name: Read CMS version from package.json
        run: echo "cmsVersion=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        id: details

      - name: Build and push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/keystone:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD=${{ github.sha }}
            CMS_VERSION=${{ steps.details.outputs.cmsVersion }}

      - name: Snapshot RDS
        env:
          RDS_INSTANCE: ${{ secrets.RDS_INSTANCE }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ./scripts/snapshot-rds.sh

      - name: Download task definition | Update Task Definition | Update ECS Service | Deploy new image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: keystone
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ./scripts/deploy-dev-aws.sh

  trivy-scan-image:
    needs: build-and-push-dev-aws
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # v2
        with:
          aws-access-key-id: ${{ secrets.GHA_ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GHA_ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.GHA_ECR_ROLE_ASSUMPTION }}
          role-skip-session-tagging: true
          role-duration-seconds: '3600'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@2f9f10ea3fa2eed41ac443fee8bfbd059af2d0a4 # v1

      - name: Aqua Security Trivy
        id: scan-aws-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: keystone
          IMAGE_TAG: ${{ github.sha }}
        uses: aquasecurity/trivy-action@1f0aa582c8c8f5f7639610d6d38baddfea4fdcee # 0.9.2
        with:
          image-ref: '${{ steps.login-ecr.outputs.registry }}/keystone:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@32dc499307d133bb5085bae78498c0ac2cf762d5 # v2
        with:
          sarif_file: 'trivy-results.sarif'

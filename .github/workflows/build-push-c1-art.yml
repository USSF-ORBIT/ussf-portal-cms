name: Docker Build Main Push C1 Artifactory

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-push-C1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Add DoD Certificate Bundle
        env:
          CERT_BUNDLE_SHA256: ${{ secrets.DOD_CA_CERT_BUNDLE_SHA256 }}
        run: |
          echo "$CERT_BUNDLE_SHA256" > scripts/dod_ca_cert_bundle.sha256
          sudo bash scripts/add-dod-cas.sh

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.C1_REGISTRY }}/${{ secrets.C1_REPOSITORY }}
          tags: |
            type=sha,prefix=,format=long
          flavor: |
            latest=false

      - uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1 # v2
        id: buildx
        with:
          config-inline: |
            [registry."${{ secrets.C1_REGISTRY }}"]
              ca=["/etc/ssl/certs/adoptium/cacerts"]
              http = false
              insecure = true

      - name: Read CMS version from package.json
        run: echo "cmsVersion=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        id: details

      - name: Build
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4
        with:
          context: .
          push: false
          load: true
          tags: ${{ secrets.C1_REGISTRY}}/${{ secrets.C1_REPOSITORY }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD=${{ github.sha }}
            CMS_VERSION=${{ steps.details.outputs.cmsVersion }}

      - name: Login to Dev Artifactory Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2
        with:
          registry: ${{ secrets.C1_REGISTRY }}
          username: ${{ secrets.C1_ART_USERNAME }}
          password: ${{ secrets.C1_ARTIFACTORY_TOKEN }}

      - name: Push image to C1 Dev, Test, and Prod Artifactory
        id: build-c1-image
        env:
          IMAGE_TAG: ${{ github.sha }}
          C1_REGISTRY: ${{ secrets.C1_REGISTRY }}
          C1_REPOSITORY: ${{ secrets.C1_REPOSITORY }}

        run: |
          docker push $C1_REGISTRY/$C1_REPOSITORY:$IMAGE_TAG
          docker tag $C1_REGISTRY/$C1_REPOSITORY:$IMAGE_TAG $C1_REGISTRY/dockerreadyfortest/portal/keystone:$IMAGE_TAG
          docker push $C1_REGISTRY/dockerreadyfortest/portal/keystone:$IMAGE_TAG
          docker tag $C1_REGISTRY/$C1_REPOSITORY:$IMAGE_TAG $C1_REGISTRY/dockerreadyforprod/portal/keystone:$IMAGE_TAG
          docker push $C1_REGISTRY/dockerreadyforprod/portal/keystone:$IMAGE_TAG
          echo "image=$C1_REGISTRY/$C1_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
